// function sum(a, b) {
//   return a + b;
// }

// const sum = (a, b) => {
//   return a + b;
// };

// const sum = (a, b) => a + b;

// console.log(sum(1, 2));

// ---------------------------------------------------------------------------- //
// 1) 매개변수 표현

// 매개변수가 없을 경우, 소괄호 생략 불가
// () => {
//   return true;
// };

// 매개변수가 한 개인 경우, 소괄호 생략 가능
// x => {
//   return x;
// };

// 매개변수가 여러 개인 경우, 소괄호 생략 불가
// (x, y) => {
//   return x + y;
// };
// ---------------------------------------------------------------------------- //
// 2) 함수 몸체 표현

// x => {
//   return x * x;
// };

// // 함수 몸체가 한줄의 구문이라면 중괄호를 생략할 수 있다.
// x => x * x;

// ---------------------------------------------------------------------------- //
// 3) 객체 리터럴 반환
// const person = {
//   name: "Kim",
// };

// () => {
//   return { name: "Kim" };
// };

// () => ({ name: "Kim" }); // 위 표현과 동일하다. 객체 반환시 소괄호를 사용한다.

// ---------------------------------------------------------------------------- //
// 4) 화살표 함수 호출
// const pow = (x) => x * x;
// console.log(pow(10)); // 100

// // 콜백 함수에 사용할 때
// const arr = [1, 2, 3];
// const pow = arr.map((x) => x * x);
// console.log(pow); // [ 1, 4, 9 ]
